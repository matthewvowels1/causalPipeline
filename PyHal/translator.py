import numpy as np
import pandas as pd
import rpy2.robjects as ro
from rpy2.robjects.packages import importr
from rpy2.robjects.vectors import StrVector, IntVector, FloatVector


###
# Translator py to rpy objects and vice versa
# All these functions were generated by Copilot after having given up with usual documentation
#
#
###

def py_to_rpy(data):
    """
    Convert python objects to rpy objects
    """
    if isinstance(data, np.ndarray):
        return ro.FloatVector(data)
    elif isinstance(data, pd.DataFrame):
        return ro.DataFrame(data)
    elif isinstance(data, pd.Series):
        return ro.FloatVector(data)
    elif isinstance(data, str):
        return ro.StrVector([data])
    elif isinstance(data, int):
        return ro.IntVector([data])
    elif isinstance(data, float):
        return ro.FloatVector([data])
    elif isinstance(data, list):
        return ro.StrVector(data)
    else:
        raise TypeError(f'Unsupported type: {type(data)}')


def rpy_to_py(data):
    """
    Convert rpy objects to python objects
    """
    if isinstance(data, ro.FloatVector):
        return np.array(data)
    elif isinstance(data, ro.DataFrame):
        return pd.DataFrame(data)
    elif isinstance(data, (ro.StrVector, ro.IntVector)):
        return list(data)
    elif isinstance(data, ro.Matrix):
        return np.array(data)
    else:
        raise TypeError(f'Unsupported type: {type(data)}')










